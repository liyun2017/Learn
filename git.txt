安装
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"


创建版本库
$ mkdir learngit
$ cd learngit
$ pwd   //pwd命令用于显示当前目录/Users/michael/learngit 
初始化一个Git仓库，使用git init命令。如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见
添加文件到Git仓库，分两步：
使用命令git add <file>，注意，可反复多次使用，添加多个文件；// git add readme.txt
使用命令git commit -m <message>，完成。  // git commit -m "wrote a readme file" 


查看
要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。


版本回退
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。


工作区和暂存区
工作区（Working Directory：就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区
版本库（Repository）：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
			Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。

			
管理修改
每次修改，如果不用git add到暂存区，那就不会加入到commit中
那怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了
第一次修改 -> git add -> 第二次修改 -> git add -> git commit


撤销修改
git checkout -- file可以丢弃工作区的修改   //git checkout -- readme.txt
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
	一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
	一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
	总之，就是让这个文件回到最近一次git commit或git add时的状态。
命令git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区。
	git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。


删除文件
通常直接在文件管理器中把没用的文件删了，或者用rm命令删了。//rm test.txt
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。



远程仓库
本地Git仓库和GitHub仓库之间的传输是通过SSH加密的
第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件
		如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
			ssh-keygen -t rsa -C "youremail@example.com" //邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可
			一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：			